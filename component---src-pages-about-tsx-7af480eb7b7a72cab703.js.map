{"version":3,"sources":["webpack:///./src/components/DeveloperTools/DeveloperTools.tsx","webpack:///./src/pages/about.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/Contact/Contact.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/images/profile.jpg"],"names":["tools","DeveloperTools","memo","react_default","a","createElement","className","styles","developerTools","map","iconname","react_svg_esm","key","src","svgClassName","icon","About","layout","seo","title","about","profile","profileImage","alt","DeveloperTools_DeveloperTools","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","siteTitle","Contact","container","href","fallback","Layout","Fragment","header","paddingTop","Contact_Contact","Date","getFullYear","_755544856","node","p"],"mappings":"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","file":"component---src-pages-about-tsx-7af480eb7b7a72cab703.js","sourcesContent":["import React, { memo } from 'react';\nimport ReactSVG from 'react-svg';\nimport styles from './DeveloperTools.module.scss';\n\nconst tools = [\n  'csharp',\n  'fsharp',\n  'dotnet',\n  'docker',\n  'git',\n  'css3',\n  'html5',\n  'sass',\n  'python',\n  'javascript',\n  'typescript',\n  'nodejs',\n  'react',\n  'java',\n  'haskell',\n];\n\nconst DeveloperTools = memo(() => (\n  <div className={styles.developerTools}>\n    {tools.map(iconname => (\n      <ReactSVG\n        key={iconname}\n        src={`../../icons/${iconname}.svg`}\n        svgClassName={styles.icon}\n      />\n    ))}\n  </div>\n));\n\nexport default DeveloperTools;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport profileImage from '../images/profile.jpg';\nimport styles from './styles/about.module.scss';\nimport DeveloperTools from '../components/DeveloperTools/DeveloperTools';\n\nconst About = (): JSX.Element => (\n  <Layout>\n    <SEO title=\"About\" />\n    <section className={styles.about}>\n      <p>\n        My name is Oliver Fleckenstein, and currently studing at Technical\n        University of Denmark (DTU) for my Masters in Computer Science and\n        Engineering. During my studies, I have been working at Microsoft Denmark\n        as a student worker, primarily building front-end applications with\n        React and TypeScript.\n      </p>\n      <div className={styles.profile}>\n        <img src={profileImage} alt=\"profile\" />\n      </div>\n    </section>\n    <section>\n      <p>\n        I love learning new stuff, such as new languages and frameworks. Here\n        are some of the tools and technologies I have experience with:\n      </p>\n      <DeveloperTools />\n    </section>\n  </Layout>\n);\n\nexport default About;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO(props: {\n  description: string;\n  lang: string;\n  meta: { name: string; content: string }[];\n  keywords: string[];\n  title: string;\n}) {\n  const { description, lang, meta, keywords, title } = props;\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = (props: { siteTitle: string }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {props.siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React, { memo } from 'react';\nimport ReactSVG from 'react-svg';\nimport styles from './Contact.module.scss';\n\nconst Contact = memo(() => (\n  <div className={styles.container}>\n    <a href=\"https://github.com/OliverFlecke\">\n      <ReactSVG\n        src={`../../icons/github.svg`}\n        svgClassName={styles.icon}\n        fallback={() => <span>GitHub</span>}\n      />\n    </a>\n    <a href=\"https://linkedin.com/in/OliverFlecke/\">\n      <ReactSVG\n        src={`../../icons/linkedin.svg`}\n        svgClassName={styles.icon}\n        fallback={() => <span>LinkedIn</span>}\n      />\n    </a>\n    <a href=\"mailto:OliverFlecke@outlook.com\">\n      <ReactSVG\n        src={`../../icons/mail.svg`}\n        svgClassName={styles.icon}\n        fallback={() => <span>Email</span>}\n      />\n    </a>\n  </div>\n));\n\nexport default Contact;\n","import { graphql, StaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Header from './header';\nimport './layout.css';\nimport Contact from './Contact/Contact';\n\nconst Layout = (props: { children: JSX.Element | JSX.Element[] }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{props.children}</main>\n          <footer>\n            <Contact />© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","module.exports = __webpack_public_path__ + \"static/profile-5bf6a0382bb5856f252dfd6b33fe7262.jpg\";"],"sourceRoot":""}