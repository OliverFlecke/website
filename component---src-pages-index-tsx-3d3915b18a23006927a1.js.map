{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/Contact/Contact.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","a","createElement","title","keywords","to","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","siteTitle","Contact","memo","className","styles","container","href","react_svg_esm","src","svgClassName","icon","fallback","Layout","Fragment","header","paddingTop","Contact_Contact","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-index-tsx-3d3915b18a23006927a1.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst IndexPage = (): JSX.Element => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <h1>Hi!</h1>\n    <Link to=\"/about/\">About</Link>\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, useStaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO(props: {\n  description: string;\n  lang: string;\n  meta: { name: string; content: string }[];\n  keywords: string[];\n  title: string;\n}) {\n  const { description, lang, meta, keywords, title } = props;\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = (props: { siteTitle: string }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {props.siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React, { memo } from 'react';\nimport ReactSVG from 'react-svg';\nimport styles from './Contact.module.scss';\n\nconst Contact = memo(() => (\n  <div className={styles.container}>\n    <a href=\"https://github.com/OliverFlecke\">\n      <ReactSVG\n        src={`../../icons/github.svg`}\n        svgClassName={styles.icon}\n        fallback={() => <span>GitHub</span>}\n      />\n    </a>\n    <a href=\"https://linkedin.com/in/OliverFlecke/\">\n      <ReactSVG\n        src={`../../icons/linkedin.svg`}\n        svgClassName={styles.icon}\n        fallback={() => <span>LinkedIn</span>}\n      />\n    </a>\n    <a href=\"mailto:OliverFlecke@outlook.com\">\n      <ReactSVG\n        src={`../../icons/mail.svg`}\n        svgClassName={styles.icon}\n        fallback={() => <span>Email</span>}\n      />\n    </a>\n  </div>\n));\n\nexport default Contact;\n","import { graphql, StaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Header from './header';\nimport './layout.css';\nimport Contact from './Contact/Contact';\n\nconst Layout = (props: { children: JSX.Element | JSX.Element[] }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{props.children}</main>\n          <footer>\n            <Contact />© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}